# -*- coding: utf-8 -*-
# #!/usr/bin/env python3
# ---  ---  ---  ---  ---
# file name:         graphics.py
# description :		 collection of graphical assets
#					 for console echo and prints
#
# author:            Alexandre EANG
# created on:        2023 12 22
# last updated:      2023 12 24
# updated by:        Alexandre EANG
# comment :          * Created file
# 				 	 * Added 2 logo variants
#					 * Added console clear
# ---  ---   ---  ---  ---  ---




# ---  IMPORTS  ---  ---  ---  ---
# ---  ---   ---  ---  ---  ---



# ---  DECLARATIONS  ---
# --- CONSTANTS / CONFIG

# --- GRAPHIC RESSOURCES
d_lw=[
	# --- line 1
	{
		'n' :(
				'                  ' ,
				''
			),
		'd'	:(
				'                  ' ,
				'    \\\\  \\\\  \\\\'
			),
		'r'	:(
				'    //  //  //    ' ,
				''
			)
	},
	# --- line 2
	{
		'n' 	:(
						'                  ' ,
						''
					 ),
		'd'	:(
						'                  ' ,
						'     ))  ))  ))'
					 ),
		'r'	:(
						'   ((  ((  ((     ' ,
						''
					 )
	},
	# --- line 3
	{
		'n' 	:(
						'                  ' ,
						''
					 ),
		'd'	:(
						'                  ' ,
						'     //  //  // '
					 ),
		'r'	:(
						'    \\\\  \\\\  \\\\    ' ,
						''
					 )
	},
]
d_rw=[
	# --- line 1
	{
		'n' :(
				'                  ' ,
				'  ___'
			),
		'd'	:(
				'                  ' ,
				'  __\\\\  \\\\  \\\\'
			),
		'r'	:(
				'    //  //  //    ' ,
				''
			)
	},
	# --- line 2
	{
		'n' 	:(
						'                  ' ,
						''
					 ),
		'd'	:(
						'                  ' ,
						'  ))  ))'
					 ),
		'r'	:(
						'   ((  ((  ((     ' ,
						''
					 )
	},
	# --- line 3
	{
		'n' 	:(
						'                  ' ,
						''
					 ),
		'd'	:(
						'                  ' ,
						' //  // '
					 ),
		'r'	:(
						'    \\\\  \\\\  \\\\    ' ,
						''
					 )
	},
]
d_clw=[
	# --- line 1
	{
		'n' :('  _____________'),
		'c' :('    __________'),
		'o' :('  //──────/')
	},
	# --- line 2
	{
		'n' :('  //────────────\\\\'),
		'c' :('   / ────  ──── \\'),
		'o' :('  //')
	},
	# --- line 3
	{
		'n' :('||'),
		'c' :(' //            \\\\'),
		'o' :('||')
	},
	# --- line 4
	{
		'n' :('||'),
		'c' :('//             ||'),
		'o' :('||')
	},
	# --- line 5
	{
		'n' :(' ||'),
		'c' :(' \\\\	         //'),
		'o' :(' ||')
	},
	# --- line 6
	{
		'n' :('||'),
		'c' :(' \\\\_      ____//'),
		'o' :('||')
	},
	# --- line 7
	{
		'n' :(' \\\\____________//'),
		'c' :('   \\\\____─────'),
		'o' :(' \\\\')
	},
	# --- line 8
	{
		'n' :('      ───────────'),
		'c' :(''),
		'o' :('     \\\\______')
	},
	# --- line 9
	{
		'n' :(''),
		'c' :(''),
		'o' :('    ──────\\')
	},
	# --- line 10
	{
		'n' :(''),
		'c' :('    ||'),
		'o' :('')
	},
	# --- line 11
	{
		'n' :(''),
		'c' :('    ╠╣'),
		'o' :('')
	},
	# --- line 12
	{
		'n' :(''),
		'c' :('    ||'),
		'o' :('')
	},

]
# ---  ---  ---  ---  ---  ---



# ---  FUNCTION DEFINITION  ---
def TECHNOBOTS_LOGO(style='slant'):
	if (style == 'slant'):
		print("______________________________________________________________")
		print("  ____________________  ____  ______  __    ____  ___________")
		print(" /_  __/ ____/ ____/ / / / | / / __ \\/ /_  / __ \\/_  __/ ___/")
		print("  / / / __/ / /   / /_/ /  |/ / / / / __ \\/ / / / / /  \\__ \\ ")
		print(" / / / /___/ /___/ __  / /|  / /_/ / /_/ / /_/ / / /  ___/ / ")
		print("/_/ /_____/\\____/_/ /_/_/ |_/\\____/_____/\\____/ /_/  /____/  ")
		print("______________________________________________________________")
		
	if (style == 'left slant'):
		print("  _________  _______   ________  ___  ___  ________   ________  ________  ________  _________  ________      ")
		print(" |\\___   ___\\\\   ___\\ |\\   ____\\|\\  \\|\\  \\|\\   ___  \\|\\   __  \\|\\   __  \\|\\   __  \\|\\___   ___\\\\   ____\\     ")
		print(" \\|___ \\  \\_| \\  \\__| \\ \\  \\___|\\ \\  \\\\\\  \\ \\  \\\\ \\  \\ \\  \\|\\  \\ \\  \\|\\ /_ \\  \\|\\  \\|___ \\  \\_| \\  \\___|_    ")
		print("      \\ \\  \\ \\ \\   ___\\\\ \\  \\    \\ \\   __  \\ \\  \\\\ \\  \\ \\  \\\\\\  \\ \\   __  \\ \\  \\\\\\  \\   \\ \\  \\ \\ \\_____  \\   ")
		print("       \\ \\  \\ \\ \\  \\__|_\\ \\  \\____\\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\\\\\  \\ \\  \\|\\  \\ \\  \\\\\\  \\   \\ \\  \\ \\|____|\\  \\  ")
		print("        \\ \\__\\ \\ \\______\\\\ \\_______\\ \\__\\ \\__\\ \\__\\\\ \\__\\ \\_______\\ \\_______\\ \\_______\\   \\ \\__\\  ____\\_\\  \\ ")
		print("         \\|__|  \\|_______|\\|_______|\\|__|\\|__|\\|__| \\|__|\\|_______|\\|_______|\\|_______|    \\|__| |\\_________\\")
		print("                                                                                                 \\|_________|")
	return

def CLEAR_CONSOLE(n=50):
	for k in range(n):
		print("\n")
	return

def ROBOT(lw_status='n' , rw_status='n', clw_status='n'):
	d_lw
	d_rw
	d_clw
	print("\u2593 aze \u2592 aze \u1F601")
	print(b'\xF0\x9F\x98\x81'.decode('utf-8'))
	lws=lw_status
	rws=rw_status
	clws=clw_status

	print('\x1b[6;30;42m' + 'Success!' + '\x1b[0m')

	print(f"{d_lw[0][lws][0]} |▓▓▓▓▓▓▓▓▓\\      {d_lw[0][lws][1]}					")
	print(f"{d_lw[1][lws][0]}||▓▓▓▓▓▓▓▓▓▓|\\    {d_lw[1][lws][1]}					")
	print(f"{d_lw[2][lws][0]} \\____..____\\|   {d_lw[2][lws][1]}					")
	print(f" _______________________||____     _____          {d_clw[0][clws]}		")
	print(f"|▓[             ▓▓▓▓▓▓▓▓▓▓▓▓▓▓|\\  |▓▓   |        {d_clw[1][clws]}		")
	print(f"|▓[             ▓|          |▓||  |▓▓___|    ___  {d_clw[2][clws]}		")
	print(f"|▓[             ▓|          |▓|| |▓_________/  [) {d_clw[3][clws]}		")
	print(f"|▓[       ^     ▓|          |▓|| |▓     ▓▓▓▓|__[) ====___    {d_clw [9][clws]}")
	print(f"|▓[     < □ >   ▓|          |▓|| |▓     ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓    {d_clw[10][clws]}")
	print(f"|▓[       v     ▓|          |▓|| |▓_____▓▓▓▓|  [) ====	     {d_clw[11][clws]}")
	print(f"|▓[             ▓|          |▓|| |▓         \\__[){d_clw[4][clws]}		")
	print(f"|▓[             ▓|__________|▓|| |▓               {d_clw[5][clws]}		")
	print(f"|▓[_____________▓▓▓▓▓▓▓▓▓▓▓▓▓▓||                  {d_clw[6][clws]}		")
	print(f"\\_\\____________________.._____\\|               {d_clw[7][clws]}		")
	print(f"     \\____||           ||                        {d_clw[8][clws]}		")
	print(f"{d_rw[0][rws][0]}  |▓▓▓▓▓▓▓▓▓\\     {d_rw[0][rws][1]}					")
	print(f"{d_rw[1][rws][0]} ||▓▓▓▓▓▓▓▓▓▓|\\   <[▓▓▓| {d_rw[1][rws][1]}			")
	print(f"{d_rw[2][rws][0]}  \\__________\\|   <[▓▓▓| {d_rw[2][rws][1]}			")
	print('')
	return


# ---  ---  ---  ---  ---  ---  ---




# ---  CODE START  ---
# ROBOT('d','r','c')
# print('')

def print_format_table():
    """
    prints table of formatted text format options
    """
    for style in range(8):
        for fg in range(30,38):
            s1 = ''
            for bg in range(40,48):
                format = ';'.join([str(style), str(fg), str(bg)])
                s1 += '\x1b[%sm %s \x1b[0m' % (format, format)
            print(s1)
        print('\n')

# print_format_table()

CRED = '\033[91m'
CEND = '\033[0m'

def print_red(thing):
	print(CRED+thing+CEND)
	return


print_red(" ||▓▓▓▓▓▓▓▓▓▓|\\   <[▓▓▓| ")